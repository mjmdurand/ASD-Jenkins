pipeline {
    agent any

    stages {
        stage('Build and Strip Sequencialize') {
            /* Sequencialize */
            stages {
                stage('Build') {
                    steps {
                        echo 'Building..'
                        sh 'make main'
                    }
                }
                stage('Strip') {
                    steps {
                        echo 'Stripping..'
                        sh 'strip main'
                        archiveArtifacts artifacts: 'main', fingerprint: true
                    }
                }
            }
        }
        stage('Build Parallel') {
            /* Parallel */
            parallel {
                stage('Build main2') {
                    steps {
                        echo 'Building main2..'
                        sh 'make main2'
                        sh 'strip main2'
                        archiveArtifacts artifacts: 'main2', fingerprint: true
                    }
                }
                stage('Build main3') {
                    steps {
                        echo 'Building main3..'
                        sh 'make main3'
                        sh 'strip main3'
                        archiveArtifacts artifacts: 'main3', fingerprint: true
                    }
                }
            }
        }

        stage('Env vars') {
            /* Parallel */
            parallel {
                stage('no vars') {
                    steps {
                        echo 'tree without vars..'
                        sh 'tree /tmp'
                    }
                }
                stage('with enw vars') {
                    environment {
                        LANG = 'C'
                    }
                    steps {
                        echo 'tree without vars..'
                        sh 'tree /tmp'
                    }
                }
            }
        }
        stage('Build with dynamic variable') {
            environment {
                CC = """${sh(
                        returnStdout: true,
                        script: 'echo "clang"'
                    )}""" 
                // Using returnStatus
                EXIT_STATUS = """${sh(
                        returnStatus: true,
                        script: 'exit 1'
                    )}"""
                }
            steps {
                echo "Build with dynamic variable"
                sh 'printenv'
            }
        }
        /*stage('Use secrets') {
            environment {
                AWS_SECRET = credentials('monmotdepassesecret')
                }
            steps {
                echo "secrets"
                sh 'printenv'
            }
        }*/
        stage('Test') {
            steps {
                echo 'Testing..'
                sh 'ls'
               /* junit '*.xml' */
            }
        }
        stage('Deploy') {
            when {
              changelog '.* deploy .*'
            }
            steps {
                echo 'Deploying....'
            }
        }
    }
}
